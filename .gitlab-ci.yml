services:
  - docker:dind

stages:
- build
- test
- release
- deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_VERSION: "18.06"
  DOCKER_HEALTHCHECK_TIMEOUT: "60"
  REGISTRY_DOMAIN: registry.gitlab.com
  CONTAINER_REGISTRY: $REGISTRY_DOMAIN/saltynos/Server/SaltyEmu
  CONTAINER_WORLD_BUILD_IMAGE: $CONTAINER_REGISTRY/saltyemu-world:$CI_BUILD_REF_NAME
  CONTAINER_WORLD_RELEASE_IMAGE: $CONTAINER_REGISTRY/saltyemu-world:latest
  CONTAINER_LOGIN_BUILD_IMAGE: $CONTAINER_REGISTRY/saltyemu-login:$CI_BUILD_REF_NAME
  CONTAINER_LOGIN_RELEASE_IMAGE: $CONTAINER_REGISTRY/saltyemu-login:latest

 
build_project:
  image: microsoft/dotnet:2.2-sdk-alpine
  stage: build
  script:
   - dotnet restore --configfile Nuget.config
   - dotnet build
   
# Test ChickenAPI.Game project with unit test
test_project:
    image: microsoft/dotnet:2.2-sdk-alpine
    stage: test
    script:
    - dotnet restore --configfile Nuget.config
    - dotnet test test/ChickenAPI.Game.Test/


# Docker Building
release docker world:
  stage: release
  image: docker:stable
  tags:
    - docker
  only:
    - tags
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $REGISTRY_DOMAIN
  script:
    - docker build -t $CONTAINER_LOGIN_BUILD_IMAGE -f login.Dockerfile .
    - docker push $CONTAINER_LOGIN_BUILD_IMAGE
    
# Docker Building Login
release docker login:
  stage: release
  image: docker:stable
  tags:
    - docker
  only:
    - tags
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $REGISTRY_DOMAIN
  script:
    - docker build -t $CONTAINER_WORLD_BUILD_IMAGE -f world.Dockerfile .
    - docker push $CONTAINER_WORLD_BUILD_IMAGE